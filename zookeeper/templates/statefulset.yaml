apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "zookeeper.fullname" . }}-statefulset
  labels:
{{ include "zookeeper.chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ template "zookeeper.fullname" . }}-headless
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "zookeeper.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: "zookeeper-server"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "zookeeper.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "zookeeper-server"
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriod }}
      securityContext:
{{ toYaml .Values.securityContext | indent 8 }}
      containers:
        - name: zookeeper
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.headlessService.ports.client.containerPort }}
              protocol: {{ .Values.headlessService.ports.client.protocol }}
              name: client
            - containerPort: {{ .Values.headlessService.ports.server.containerPort }}
              protocol: {{ .Values.headlessService.ports.server.protocol }}
              name: server
            - containerPort: {{ .Values.headlessService.ports.election.containerPort }}
              protocol: {{ .Values.headlessService.ports.election.protocol }}
              name: leader-election
          command:
            - sh
            - -c
            - "start-zookeeper \
              --servers={{ .Values.replicaCount }} \
              --data_dir=/var/lib/zookeeper/data \
              --data_log_dir=/var/lib/zookeeper/data/log \
              --conf_dir=/opt/zookeeper/conf \
              --client_port={{ .Values.headlessService.ports.client.containerPort }} \
              --election_port={{ .Values.headlessService.ports.server.containerPort }} \
              --server_port={{ .Values.headlessService.ports.election.containerPort }} \
              --tick_time=2000 \
              --init_limit=10 \
              --sync_limit=5 \
              --heap=512M \
              --max_client_cnxns=60 \
              --snap_retain_count=3 \
              --purge_interval=12 \
              --max_session_timeout=40000 \
              --min_session_timeout=4000 \
              --log_level=INFO"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          volumeMounts:
            - mountPath: /var/lib/zookeeper
              name: datadir
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}