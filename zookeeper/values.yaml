# Default values for zookeeper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
terminationGracePeriod: 1800  # Duration in seconds a Zokeeper pod needs to terminate gracefully.

image:
  repository: k8s.gcr.io/kubernetes-zookeeper
  tag: 1.0-3.4.10
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 2181
  # Arbitrary non-identifying metadata for zookeeper service.
  annotations: {}
  ## AWS example for use with LoadBalancer service type.
  # external-dns.alpha.kubernetes.io/hostname: zookeeper.cluster.local
  # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  # service.beta.kubernetes.io/aws-load-balancer-internal: "true"

headlessService:
  ports:
    client:
      containerPort: 2181  # Port number for zookeeper container client port.
      protocol: TCP  # Protocol for zookeeper container client port.
    election:
      containerPort: 3888  # Port number for zookeeper container election port.
      protocol: TCP  # Protocol for zookeeper container election port.
    server:
      containerPort: 2888  # Port number for zookeeper container server port.
      protocol: TCP  # Protocol for zookeeper container server port.

podDisruptionBudget:
  maxUnavailable: 1  # Limits how many Zookeeper pods may be unavailable due to voluntary disruptions.

updateStrategy:
  type: RollingUpdate  # Pods will only be created when you manually delete old pods.

securityContext:
  fsGroup: 1000
  runAsUser: 1000

readinessProbe:
  exec:
    command:
      - sh
      - -c
      - "zookeeper-ready 2181"
  initialDelaySeconds: 10
  timeoutSeconds: 5

livenessProbe:
  exec:
    command:
      - sh
      - -c
      - "zookeeper-ready 2181"
  initialDelaySeconds: 10
  timeoutSeconds: 5

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: "250Mi"
    cpu: "0.5"
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence:
  size: "1Gi"
  accessMode: "ReadWriteOnce"
  storageClass: ""
